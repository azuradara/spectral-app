// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  max-width: $max-width; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  padding-left: 20px; /* 3 */
  padding-right: 20px; /* 3 */
  width: 100%; /* 1 */
}

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.select {
  z-index: 100;
  font-size: 0.8rem;
  outline: none;
  appearance: none;
  background: none;
  color: $text-light;
  border: none;

  &-bako {
    cursor: pointer;
    padding: 1rem;
    padding-right: 3rem;
    // text-transform: uppercase;
    font-weight: 700;
    color: white;
    opacity: 0.5;

    &__arrow {
      position: absolute;
      width: max-content;
      height: max-content;
      right: 1rem;
      top: 50%;
      transform: translate(-30%, -50%);
    }
  }

  &-inner {
    position: relative;
  }

  &-opts {
    position: absolute;
    width: max-content;
    top: calc(100%);
    left: 50%;
    opacity: 0;
    pointer-events: auto;
    background: rgba($color: $main-dark, $alpha: 0.7);
    backdrop-filter: $blur-sm;
    border-radius: 4px;
    font-size: 1rem;
    outline: none;
    appearance: none;
    color: $text-light;
    border: none;
    transition: opacity 250ms ease-out !important;

    @include transition(width);

    &__single {
      cursor: pointer;
      padding: 1rem 2rem;
      padding-left: 1rem;
      position: relative;
      overflow: hidden;
      display: flex !important;
      align-items: center;
      justify-content: flex-start;
      width: 100%;
      gap: 1rem;
      min-width: fit-content;
      width: 10rem;
      // text-transform: uppercase;
      font-weight: 700;
      max-width: 100%;

      @include transition(background);

      &:hover {
        border-color: $opaque-light;
        background: $trans-light-xs;
      }

      & + .select-opts__single {
        border-top: 1px solid $opaque-light;
      }
    }
  }

  option {
    color: black;
    outline: none;
    border: none;
    appearance: none;
  }
}

.notification-dispatcher {
  position: absolute;
  bottom: 1rem;
  right: 1.5rem;
  min-width: 15rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  .notification {
    background: $trans-light-s;
    padding: 0.5rem 1rem;
    display: flex;
    flex-direction: column;
    align-content: center;
    border-radius: 4px;
    position: relative;

    &::after {
      position: absolute;
      display: block;
      content: '';
      height: 100%;
      width: 5px;
      right: 0;
      top: 0;
      z-index: 2000;
      border-radius: 0 4px 4px 0;
    }

    &--error::after {
      background-color: #f72119;
      filter: drop-shadow(4px 4px 50px #f72119)
        drop-shadow(-4px -4px 20px #f72119);
    }

    &--default::after {
      background-color: white;
      filter: drop-shadow(6px 6px 20px white) drop-shadow(-4px -4px 20px white);
    }
  }
}
